=begin
#Core API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FrontApi::InboxesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InboxesApi' do
  before do
    # run before each test
    @api_instance = FrontApi::InboxesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InboxesApi' do
    it 'should create an instance of InboxesApi' do
      expect(@api_instance).to be_instance_of(FrontApi::InboxesApi)
    end
  end

  # unit tests for add_inbox_access
  # Add inbox access
  # Give access to one or more teammates to an inbox.
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @option opts [TeammateIds] :teammate_ids Teammate IDs to add. Alternatively, you can supply teammate emails as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @return [nil]
  describe 'add_inbox_access test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_inbox
  # Create inbox
  # Create an inbox in the default team (workspace). The default team will be the oldest team created that still exists at the time of the request.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateInbox] :create_inbox Inbox details
  # @return [nil]
  describe 'create_inbox test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_team_inbox
  # Create team inbox
  # Create an inbox for a team (workspace).
  # @param team_id The team ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateInbox] :create_inbox Inbox details
  # @return [nil]
  describe 'create_team_inbox test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_inbox
  # Get inbox
  # Fetch an inbox.
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @return [InboxResponse]
  describe 'get_inbox test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_inbox_access
  # List inbox access
  # List the teammates with access to an inbox.
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @return [ListCommentMentions200Response]
  describe 'list_inbox_access test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_inbox_channels
  # List inbox channels
  # List the channels in an inbox.
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @return [ListChannels200Response]
  describe 'list_inbox_channels test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_inbox_conversations
  # List inbox conversations
  # List the conversations in an inbox. For more advanced filtering, see the [search endpoint](https://dev.frontapp.com/reference/conversations#search-conversations). 
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with a property &#x60;statuses&#x60;, whose value should be a list of conversation statuses (&#x60;assigned&#x60;, &#x60;unassigned&#x60;, &#x60;archived&#x60;, or &#x60;deleted&#x60;).
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @return [ListContactConversations200Response]
  describe 'list_inbox_conversations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_inboxes
  # List inboxes
  # List the inboxes of the company.
  # @param [Hash] opts the optional parameters
  # @return [ListConversationInboxes200Response]
  describe 'list_inboxes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_team_inboxes
  # List team inboxes
  # List the inboxes belonging to a team (workspace).
  # @param team_id The team ID
  # @param [Hash] opts the optional parameters
  # @return [ListConversationInboxes200Response]
  describe 'list_team_inboxes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for removes_inbox_access
  # Removes inbox access
  # Remove access of one or more teammates from an inbox.
  # @param inbox_id The Inbox ID
  # @param [Hash] opts the optional parameters
  # @option opts [TeammateIds] :teammate_ids Teammate IDs to remove. Alternatively, you can supply teammate emails as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @return [nil]
  describe 'removes_inbox_access test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
