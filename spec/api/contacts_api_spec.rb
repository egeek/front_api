=begin
#Core API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FrontApi::ContactsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContactsApi' do
  before do
    # run before each test
    @api_instance = FrontApi::ContactsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactsApi' do
    it 'should create an instance of ContactsApi' do
      expect(@api_instance).to be_instance_of(FrontApi::ContactsApi)
    end
  end

  # unit tests for create_contact
  # Create contact
  # Create a new contact.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateContact] :create_contact 
  # @return [ContactResponse]
  describe 'create_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_team_contact
  # Create team contact
  # Create a contact for a team (workspace).
  # @param team_id The team ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateContact] :create_contact 
  # @return [ContactResponse]
  describe 'create_team_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_teammate_contact
  # Create teammate contact
  # Create a contact for a teammate.
  # @param teammate_id The teammate ID. Alternatively, you can supply an email as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @option opts [CreateContact] :create_contact 
  # @return [ContactResponse]
  describe 'create_teammate_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_a_contact
  # Delete a contact
  # Delete a contact.
  # @param contact_id The contact ID. Alternatively, you can supply the contact&#39;s source and handle as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_a_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact
  # Get contact
  # Fetch a contact.
  # @param contact_id The contact ID. Alternatively, you can supply the contact&#39;s source and handle as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @return [ContactResponse]
  describe 'get_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_contact_conversations
  # List contact conversations
  # List the conversations for a contact in reverse chronological order (newest first). For more advanced filtering, see the [search endpoint](https://dev.frontapp.com/reference/conversations#search-conversations). 
  # @param contact_id The Contact ID. Alternatively, you can supply the contact&#39;s source and handle as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with a property &#x60;statuses&#x60;, whose value should be a list of conversation statuses (&#x60;assigned&#x60;, &#x60;unassigned&#x60;, &#x60;archived&#x60;, or &#x60;deleted&#x60;).
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @return [ListContactConversations200Response]
  describe 'list_contact_conversations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_contacts
  # List contacts
  # List the contacts of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with the optional properties &#x60;updated_after&#x60; and &#x60;updated_before&#x60;, whose value should be a timestamp in seconds with up to 3 decimal places.
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :sort_by Field used to sort the contacts. Either &#x60;created_at&#x60; or &#x60;updated_at&#x60;.
  # @option opts [String] :sort_order Order by which results should be sorted
  # @return [ListAccountContacts200Response]
  describe 'list_contacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_team_contacts
  # List team contacts
  # List the contacts of a team (workspace).
  # @param team_id The team ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with the optional properties &#x60;updated_after&#x60; and &#x60;updated_before&#x60;, whose value should be a timestamp in seconds with up to 3 decimal places.
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :sort_by Field used to sort the contacts. Either &#x60;created_at&#x60; or &#x60;updated_at&#x60;.
  # @option opts [String] :sort_order Order by which results should be sorted
  # @return [ListAccountContacts200Response]
  describe 'list_team_contacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_teammate_contacts
  # List teammate contacts
  # List the contacts of a teammate.
  # @param teammate_id The teammate ID. Alternatively, you can supply an email as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with the optional properties &#x60;updated_after&#x60; and &#x60;updated_before&#x60;, whose value should be a timestamp in seconds with up to 3 decimal places.
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :sort_by Field used to sort the contacts. Either &#x60;created_at&#x60; or &#x60;updated_at&#x60;.
  # @option opts [String] :sort_order Order by which results should be sorted
  # @return [ListAccountContacts200Response]
  describe 'list_teammate_contacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for merge_contacts
  # Merge contacts
  # Merges the contacts specified into a single contact, deleting the merged-in contacts. If a target contact ID is supplied, the other contacts will be merged into that one. Otherwise, some contact in the contact ID list will be treated as the target contact. Merge conflicts will be resolved in the following ways:   * name will prioritize manually-updated and non-private contact names   * descriptions will be concatenated and separated by newlines in order from     oldest to newest with the (optional) target contact&#39;s description first   * all handles, groups, links, and notes will be preserved   * other conflicts will use the most recently updated contact&#39;s value 
  # @param [Hash] opts the optional parameters
  # @option opts [MergeContacts] :merge_contacts 
  # @return [ContactResponse]
  describe 'merge_contacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_a_contact
  # Update a contact
  # Updates a contact.
  # @param contact_id The contact ID. Alternatively, you can supply the contact&#39;s source and handle as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
  # @param [Hash] opts the optional parameters
  # @option opts [Contact] :contact 
  # @return [nil]
  describe 'update_a_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
