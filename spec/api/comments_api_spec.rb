=begin
#Core API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FrontApi::CommentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CommentsApi' do
  before do
    # run before each test
    @api_instance = FrontApi::CommentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CommentsApi' do
    it 'should create an instance of CommentsApi' do
      expect(@api_instance).to be_instance_of(FrontApi::CommentsApi)
    end
  end

  # unit tests for add_comment
  # Add comment
  # Add a comment to a [conversation](https://dev.frontapp.com/reference/conversations). If you want to create a new comment-only conversation, use the [Create discussion conversation](https://dev.frontapp.com/reference/create-conversation) endpoint.
  # @param conversation_id The conversation ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateComment] :create_comment 
  # @return [CommentResponse]
  describe 'add_comment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_comment
  # Get comment
  # Fetches a comment.
  # @param comment_id The Comment ID
  # @param [Hash] opts the optional parameters
  # @return [CommentResponse]
  describe 'get_comment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_comment_mentions
  # List comment mentions
  # List the teammates mentioned in a comment.
  # @param comment_id The Comment ID
  # @param [Hash] opts the optional parameters
  # @return [ListCommentMentions200Response]
  describe 'list_comment_mentions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_conversation_comments
  # List conversation comments
  # List the comments in a conversation in reverse chronological order (newest first).
  # @param conversation_id The conversation ID
  # @param [Hash] opts the optional parameters
  # @return [ListConversationComments200Response]
  describe 'list_conversation_comments test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_comment
  # Update comment
  # Update a comment in a [conversation](https://dev.frontapp.com/reference/conversations).
  # @param comment_id The Comment ID
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateComment] :update_comment 
  # @return [CommentResponse]
  describe 'update_comment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
