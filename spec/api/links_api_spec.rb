=begin
#Core API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FrontApi::LinksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LinksApi' do
  before do
    # run before each test
    @api_instance = FrontApi::LinksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LinksApi' do
    it 'should create an instance of LinksApi' do
      expect(@api_instance).to be_instance_of(FrontApi::LinksApi)
    end
  end

  # unit tests for create_link
  # Create link
  # Create a link. You must supply either &#x60;pattern&#x60; or &#x60;external_url&#x60; in the request, but not both (&#x60;pattern&#x60; is for dynamic objects while &#x60;external_url&#x60; is for standard links). If &#x60;pattern&#x60; is provided, the API call updates the dynamic objects matching the exact pattern. If the link is resolved to an installed links integration, any name retrieved from the integration will override the provided name in the request.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateLink] :create_link Link to create
  # @return [LinkResponse]
  describe 'create_link test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_link
  # Get link
  # Fetch a link.
  # @param link_id The link ID
  # @param [Hash] opts the optional parameters
  # @return [LinkResponse]
  describe 'get_link test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_link_conversations
  # List link conversations
  # List the conversations linked to a specific link. For more advanced filtering, see the [search endpoint](https://dev.frontapp.com/reference/conversations#search-conversations). 
  # @param link_id The Link ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with a property &#x60;statuses&#x60;, whose value should be a list of conversation statuses (&#x60;assigned&#x60;, &#x60;unassigned&#x60;, &#x60;archived&#x60;, or &#x60;deleted&#x60;).
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :sort_by Field used to sort the conversations. Only supports &#x60;date&#x60;.
  # @option opts [String] :sort_order Order by which results should be sorted
  # @return [ListContactConversations200Response]
  describe 'list_link_conversations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_links
  # List links
  # List the links of the company paginated by id. Allows filtering by link type via the q.types param.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q [Search query object](https://dev.frontapp.com/docs/query-object-q) with a property &#x60;types&#x60;, whose value should be a list of link types (examples - &#x60;web&#x60;, &#x60;jira&#x60;, &#x60;asana&#x60; ).
  # @option opts [Integer] :limit Max number of results per [page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :page_token Token to use to request the [next page](https://dev.frontapp.com/docs/pagination)
  # @option opts [String] :sort_by Field used to sort the links. Only supports &#x60;id&#x60;.
  # @option opts [String] :sort_order Order by which results should be sorted
  # @return [ListLinks200Response]
  describe 'list_links test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_a_link
  # Update a link
  # Update a link.
  # @param link_id The link ID
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateLink] :update_link Link fields to update
  # @return [nil]
  describe 'update_a_link test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
