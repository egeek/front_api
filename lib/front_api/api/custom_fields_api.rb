=begin
#Core API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'cgi'

module FrontApi
  class CustomFieldsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List Account's custom fields
    # Lists the custom fields that can be attached to an Account.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_account_custom_fields(opts = {})
      data, _status_code, _headers = list_account_custom_fields_with_http_info(opts)
      data
    end

    # List Account&#39;s custom fields
    # Lists the custom fields that can be attached to an Account.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_account_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_account_custom_fields ...'
      end
      # resource path
      local_var_path = '/accounts/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_account_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_account_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Contact's custom fields
    # Lists the custom fields that can be attached to a Contact.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_contact_custom_fields(opts = {})
      data, _status_code, _headers = list_contact_custom_fields_with_http_info(opts)
      data
    end

    # List Contact&#39;s custom fields
    # Lists the custom fields that can be attached to a Contact.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_contact_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_contact_custom_fields ...'
      end
      # resource path
      local_var_path = '/contacts/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_contact_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_contact_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Conversation's custom fields
    # Lists the custom fields that can be attached to a Conversation.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_conversation_custom_fields(opts = {})
      data, _status_code, _headers = list_conversation_custom_fields_with_http_info(opts)
      data
    end

    # List Conversation&#39;s custom fields
    # Lists the custom fields that can be attached to a Conversation.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_conversation_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_conversation_custom_fields ...'
      end
      # resource path
      local_var_path = '/conversations/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_conversation_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_conversation_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Contact's custom fields
    # Lists the custom fields that can be attached to a Contact.  > ⚠️ Deprecated endpoint > > This endpoint has been deprecated. Please use the fully compatible `GET /contacts/custom_fields` endpoint instead. 
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_custom_fields(opts = {})
      data, _status_code, _headers = list_custom_fields_with_http_info(opts)
      data
    end

    # List Contact&#39;s custom fields
    # Lists the custom fields that can be attached to a Contact.  &gt; ⚠️ Deprecated endpoint &gt; &gt; This endpoint has been deprecated. Please use the fully compatible &#x60;GET /contacts/custom_fields&#x60; endpoint instead. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_custom_fields ...'
      end
      # resource path
      local_var_path = '/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Inbox's custom fields
    # Lists the custom fields that can be attached to an Inbox.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_inbox_custom_fields(opts = {})
      data, _status_code, _headers = list_inbox_custom_fields_with_http_info(opts)
      data
    end

    # List Inbox&#39;s custom fields
    # Lists the custom fields that can be attached to an Inbox.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_inbox_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_inbox_custom_fields ...'
      end
      # resource path
      local_var_path = '/inboxes/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_inbox_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_inbox_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Link's custom fields
    # Lists the custom fields that can be attached to a Link.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_link_custom_fields(opts = {})
      data, _status_code, _headers = list_link_custom_fields_with_http_info(opts)
      data
    end

    # List Link&#39;s custom fields
    # Lists the custom fields that can be attached to a Link.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_link_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_link_custom_fields ...'
      end
      # resource path
      local_var_path = '/links/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_link_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_link_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Teammate's custom fields
    # Lists the custom fields that can be attached to a Teammate.
    # @param [Hash] opts the optional parameters
    # @return [ListAccountCustomFields200Response]
    def list_teammate_custom_fields(opts = {})
      data, _status_code, _headers = list_teammate_custom_fields_with_http_info(opts)
      data
    end

    # List Teammate&#39;s custom fields
    # Lists the custom fields that can be attached to a Teammate.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListAccountCustomFields200Response, Integer, Hash)>] ListAccountCustomFields200Response data, response status code and response headers
    def list_teammate_custom_fields_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomFieldsApi.list_teammate_custom_fields ...'
      end
      # resource path
      local_var_path = '/teammates/custom_fields'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountCustomFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['http']

      new_options = opts.merge(
        :operation => :"CustomFieldsApi.list_teammate_custom_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomFieldsApi#list_teammate_custom_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
